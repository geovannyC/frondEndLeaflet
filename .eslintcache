[{"C:\\Users\\Administrator\\Documents\\projectLeafletV1\\pleafletv1\\src\\index.js":"1","C:\\Users\\Administrator\\Documents\\projectLeafletV1\\pleafletv1\\src\\reportWebVitals.js":"2","C:\\Users\\Administrator\\Documents\\projectLeafletV1\\pleafletv1\\src\\components\\App\\App.js":"3","C:\\Users\\Administrator\\Documents\\projectLeafletV1\\pleafletv1\\src\\components\\nav\\nav.js":"4","C:\\Users\\Administrator\\Documents\\projectLeafletV1\\pleafletv1\\src\\components\\nav\\drawer.js":"5","C:\\Users\\Administrator\\Documents\\projectLeafletV1\\pleafletv1\\src\\until\\get.js":"6","C:\\Users\\Administrator\\Documents\\projectLeafletV1\\pleafletv1\\src\\components\\zipDecode\\zipDecode.js":"7","C:\\Users\\Administrator\\Documents\\projectLeafletV1\\pleafletv1\\src\\components\\login\\login.js":"8","C:\\Users\\Administrator\\Documents\\projectLeafletV1\\pleafletv1\\src\\components\\login\\styleLogin.js":"9","C:\\Users\\Administrator\\Documents\\projectLeafletV1\\pleafletv1\\src\\until\\sendData.js":"10","C:\\Users\\Administrator\\Documents\\projectLeafletV1\\pleafletv1\\src\\components\\notification\\notification.js":"11","C:\\Users\\Administrator\\Documents\\projectLeafletV1\\pleafletv1\\src\\components\\list\\list.js":"12","C:\\Users\\Administrator\\Documents\\projectLeafletV1\\pleafletv1\\src\\until\\getData.js":"13"},{"size":398,"mtime":1611678011508,"results":"14","hashOfConfig":"15"},{"size":362,"mtime":499162500000,"results":"16","hashOfConfig":"15"},{"size":116,"mtime":1611930158904,"results":"17","hashOfConfig":"15"},{"size":9895,"mtime":1611933519547,"results":"18","hashOfConfig":"15"},{"size":2505,"mtime":1611937064826,"results":"19","hashOfConfig":"15"},{"size":881,"mtime":1611935447966,"results":"20","hashOfConfig":"15"},{"size":6164,"mtime":1611935543318,"results":"21","hashOfConfig":"15"},{"size":13011,"mtime":1611936655235,"results":"22","hashOfConfig":"15"},{"size":1090,"mtime":1611862067025,"results":"23","hashOfConfig":"15"},{"size":590,"mtime":1611933445142,"results":"24","hashOfConfig":"15"},{"size":1752,"mtime":1611936874956,"results":"25","hashOfConfig":"15"},{"size":3258,"mtime":1611936226955,"results":"26","hashOfConfig":"15"},{"size":556,"mtime":1611931146573,"results":"27","hashOfConfig":"15"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},"yjj1u3",{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37","usedDeprecatedRules":"30"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44","usedDeprecatedRules":"30"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},"C:\\Users\\Administrator\\Documents\\projectLeafletV1\\pleafletv1\\src\\index.js",[],["57","58"],"C:\\Users\\Administrator\\Documents\\projectLeafletV1\\pleafletv1\\src\\reportWebVitals.js",[],"C:\\Users\\Administrator\\Documents\\projectLeafletV1\\pleafletv1\\src\\components\\App\\App.js",[],"C:\\Users\\Administrator\\Documents\\projectLeafletV1\\pleafletv1\\src\\components\\nav\\nav.js",["59","60","61"],"import React, { useEffect } from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport AppBar from \"@material-ui/core/AppBar\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport DrawerNav from \"./drawer\";\r\nimport ZipDecode from \"../zipDecode/zipDecode\";\r\nimport Login from \"../login/login\";\r\nimport getData from \"../../until/get\";\r\nimport ListOrders from \"../list/list\";\r\nimport socketIOClient from \"socket.io-client\";\r\nconst ENDPOINT = \"http://localhost:4000\";\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n  },\r\n  menuButton: {\r\n    marginRight: theme.spacing(2),\r\n  },\r\n  title: {\r\n    flexGrow: 1,\r\n  },\r\n  rootInput: {\r\n    \"& > *\": {\r\n      margin: theme.spacing(1),\r\n      width: \"25ch\",\r\n    },\r\n  },\r\n}));\r\n\r\nexport default function Nav() {\r\n  const [open, setOpen] = React.useState(false),\r\n    [zip1, setZip1] = React.useState(\"\"),\r\n    [zip2, setZip2] = React.useState(\"\"),\r\n    [city, setCity] = React.useState(\"\"),\r\n    [city2, setCity2] = React.useState(\"\"),\r\n    [state, setState] = React.useState(\"\"),\r\n    [state2, setState2] = React.useState(\"\"),\r\n    [openZip2Text, setOpenZip2Text] = React.useState(false),\r\n    [openZipText, setOpenZipText] = React.useState(false),\r\n    [redirect, setRedirect] = React.useState(\"zipcode\"),\r\n    [response, setResponse] = React.useState(\"\");\r\n  const classes = useStyles();\r\n  useEffect(()=>{\r\n    const socket = socketIOClient(ENDPOINT);\r\n    socket.on(\"FromAPI\", data => {\r\n      setResponse(data);\r\n    });\r\n  },[])\r\n  const listEvent = (item) => {\r\n    setRedirect(item);\r\n  };\r\n\r\n  const onChangeZip1 = (e) => {\r\n    const onlyNums = e.target.value.replace(/[^0-9]/g, \"\");\r\n\r\n    setZip1(onlyNums);\r\n  };\r\n  const onChangeZip2 = (e) => {\r\n    const onlyNums = e.target.value.replace(/[^0-9]/g, \"\");\r\n\r\n    setZip2(onlyNums);\r\n  };\r\n  const handleChangedataCity = (e) => {\r\n    setCity(e.target.value);\r\n  };\r\n  const handleChangedataCity2 = (e) => {\r\n    setCity2(e.target.value);\r\n  };\r\n  const handleChangedataState = (e) => {\r\n    setState(e.target.value);\r\n  };\r\n  const handleChangedataState2 = (e) => {\r\n    setState2(e.target.value);\r\n  };\r\n  const ZipDecodeComponent = () => {\r\n    if (zip1.length === 0 || zip2.length === 0) {\r\n      return null;\r\n    } else {\r\n      return <ZipDecode zip1={zip1} zip2={zip2} />;\r\n    }\r\n  };\r\n  const getZipCodes = () => {\r\n    const url = `/city-zips.json/${city}/${state}`;\r\n    const url2 = `/city-zips.json/${city2}/${state2}`;\r\n    getData(url).then((response) => {\r\n      if (response.zip_codes.length !== 0) {\r\n        setZip1(response.zip_codes[0]);\r\n        setOpenZipText(true);\r\n      } else {\r\n        setZip1(\"no found city\");\r\n      }\r\n    });\r\n    getData(url2).then((response) => {\r\n      if (response.zip_codes.length !== 0) {\r\n        setZip2(response.zip_codes[0]);\r\n        setOpenZip2Text(true);\r\n      } else {\r\n        setZip2(\"no found city\");\r\n      }\r\n    });\r\n  };\r\n  const logOut = ()=>{\r\n    localStorage.removeItem('id')\r\n    localStorage.removeItem('user')\r\n    window.location.reload()\r\n  }\r\n  if (!localStorage.getItem(\"id\")) {\r\n    return <Login />;\r\n  } else {\r\n    return (\r\n      <div className={classes.root}>\r\n        <AppBar position=\"static\">\r\n          <Toolbar>\r\n            <IconButton\r\n              edge=\"start\"\r\n              className={classes.menuButton}\r\n              color=\"inherit\"\r\n              aria-label=\"menu\"\r\n            >\r\n              <DrawerNav item={listEvent} />\r\n            </IconButton>\r\n            <Typography letiant=\"h6\" className={classes.title}>\r\n              APP ZIPCODES\r\n            </Typography>\r\n            <Button color=\"inherit\" onClick={logOut}>Cerrar sesión</Button>\r\n          </Toolbar>\r\n        </AppBar>\r\n        <Grid\r\n          container\r\n          spacing={0}\r\n          alignItems=\"center\"\r\n          justify=\"center\"\r\n          style={{ minHeight: \"70vh\", marginTop: 8 }}\r\n        >\r\n          {redirect === \"zipcode\" ? (\r\n            <div>\r\n              <Grid item xs={12}>\r\n                <Grid container justify=\"center\">\r\n                  <Grid item>\r\n                    <TextField\r\n                      id=\"outlined-basic\"\r\n                      label=\"Código postal 1\"\r\n                      variant=\"outlined\"\r\n                      onChange={onChangeZip1}\r\n                      value={zip1}\r\n                      inputProps={{ maxLength: 15 }}\r\n                      className={classes.rootInput}\r\n                    />\r\n                  </Grid>\r\n                  <Grid item>\r\n                    <TextField\r\n                      id=\"outlined-basic\"\r\n                      label=\"Código postal 1\"\r\n                      variant=\"outlined\"\r\n                      onChange={onChangeZip2}\r\n                      value={zip2}\r\n                      className={classes.rootInput}\r\n                      inputProps={{ maxLength: 15 }}\r\n                    />\r\n                  </Grid>\r\n                </Grid>\r\n              </Grid>\r\n              <Grid\r\n                container\r\n                direction=\"row\"\r\n                alignItems=\"center\"\r\n                justify=\"center\"\r\n              >\r\n                <ZipDecodeComponent zip1={zip1} zip2={zip2} />\r\n              </Grid>\r\n            </div>\r\n          ) : redirect === \"bystate\" ? (\r\n            <div>\r\n              <Grid item xs={12}>\r\n                <Grid container justify=\"center\">\r\n                  <Grid item>\r\n                    <TextField\r\n                      error={zip1 === \"no found city\"}\r\n                      helperText={\r\n                        zip1 === \"no found city\"\r\n                          ? \"ingresa una ciudad válida\"\r\n                          : null\r\n                      }\r\n                      id=\"outlined-basic\"\r\n                      label=\"Cuidad salida\"\r\n                      variant=\"outlined\"\r\n                      onChange={handleChangedataCity}\r\n                      value={city}\r\n                      inputProps={{ maxLength: 15 }}\r\n                      className={classes.rootInput}\r\n                    />\r\n                  </Grid>\r\n                  <Grid item>\r\n                    <TextField\r\n                      error={zip1 === \"no found city\"}\r\n                      helperText={\r\n                        zip1 === \"no found city\"\r\n                          ? \"ingresa un código de estado válido\"\r\n                          : null\r\n                      }\r\n                      id=\"outlined-basic\"\r\n                      label=\"Estado\"\r\n                      variant=\"outlined\"\r\n                      onChange={handleChangedataState}\r\n                      value={state}\r\n                      inputProps={{ maxLength: 15 }}\r\n                      className={classes.rootInput}\r\n                    />\r\n                  </Grid>\r\n                </Grid>\r\n                <Grid container justify=\"center\">\r\n                  <Grid item>\r\n                    <TextField\r\n                      error={zip2 === \"no found city\"}\r\n                      helperText={\r\n                        zip2 === \"no found city\"\r\n                          ? \"ingresa una ciudad válida\"\r\n                          : null\r\n                      }\r\n                      id=\"outlined-basic\"\r\n                      label=\"Cuidad Destino\"\r\n                      variant=\"outlined\"\r\n                      onChange={handleChangedataCity2}\r\n                      value={city2}\r\n                      inputProps={{ maxLength: 15 }}\r\n                      className={classes.rootInput}\r\n                    />\r\n                  </Grid>\r\n                  <Grid item>\r\n                    <TextField\r\n                      error={zip2 === \"no found city\"}\r\n                      helperText={\r\n                        zip2 === \"no found city\"\r\n                          ? \"ingresa un código de estado válido\"\r\n                          : null\r\n                      }\r\n                      id=\"outlined-basic\"\r\n                      label=\"Estado Destino\"\r\n                      variant=\"outlined\"\r\n                      onChange={handleChangedataState2}\r\n                      value={state2}\r\n                      inputProps={{ maxLength: 2 }}\r\n                      className={classes.rootInput}\r\n                    />\r\n                  </Grid>\r\n                </Grid>\r\n              </Grid>\r\n              <Typography>\r\n                {zip1 && city && state && openZipText\r\n                  ? `Código postal de ${city}: ${zip1}`\r\n                  : null}\r\n              </Typography>\r\n              <Typography>\r\n                {zip2 && city2 && state2 && openZip2Text\r\n                  ? `Código postal de ${city2}: ${zip2}`\r\n                  : null}\r\n              </Typography>\r\n              {city && city2 && state && state2 ? (\r\n                <div style={{ marginBlock: 5 }}>\r\n                  <Button\r\n                    variant=\"contained\"\r\n                    color=\"primary\"\r\n                    onClick={getZipCodes}\r\n                  >\r\n                    Consultar codigos postales\r\n                  </Button>\r\n                </div>\r\n              ) : null}\r\n              {zip1 && zip2 && city && city2 && state && state2 ? (\r\n                <Grid\r\n                  container\r\n                  direction=\"row\"\r\n                  alignItems=\"center\"\r\n                  justify=\"center\"\r\n                >\r\n                  <ZipDecodeComponent />\r\n                </Grid>\r\n              ) : null}\r\n            </div>\r\n          ) : redirect==='list'?(<ListOrders/>):null}\r\n        </Grid>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","C:\\Users\\Administrator\\Documents\\projectLeafletV1\\pleafletv1\\src\\components\\nav\\drawer.js",["62"],"C:\\Users\\Administrator\\Documents\\projectLeafletV1\\pleafletv1\\src\\until\\get.js",[],"C:\\Users\\Administrator\\Documents\\projectLeafletV1\\pleafletv1\\src\\components\\zipDecode\\zipDecode.js",["63","64","65"],"import React from \"react\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport getData from \"../../until/get\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport sendData from \"../../until/sendData\";\r\nimport Notification from \"../notification/notification\";\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    width: \"100%\",\r\n    maxWidth: 500,\r\n  },\r\n});\r\nexport default function ZipDecode(props) {\r\n  const [distance, setDistance] = React.useState(false),\r\n\r\n  [city, setCity]  =React.useState(\"\"),\r\n  [city2, setCity2]  =React.useState(\"\"),\r\n  [state, setState] =React.useState(\"\"),\r\n  [state2, setState2] =React.useState(\"\"),\r\n    [status, setStatus] = React.useState(false),\r\n    [total, setTotal] = React.useState(false),\r\n    [toll, setToll] = React.useState(false),\r\n    [pricePerKm, setPricePerKm] = React.useState(false),\r\n    [delay, setDelay] = React.useState(false),\r\n    [counter, setCounter] = React.useState(60),\r\n    [arriveSameDay, setArriveSameDay] = React.useState(false),\r\n    [openN, setOpenN] = React.useState();\r\n  const classes = useStyles();\r\n\r\n  const priceKmFun =async (value) =>{\r\n    const tollSolve = value>=100?parseFloat(Number((Math.round(value/100)*0.25).toFixed(2))):false\r\n    const priceKm =  Number(( value*0.20).toFixed(2))\r\n    const Ctotal =  !tollSolve?priceKm:tollSolve+priceKm\r\n    const timeDelaySameDay =  Number(value/250).toFixed(2)*1000\r\n  \r\n    let hours =  Math.floor((timeDelaySameDay / 60) % 60);\r\n    hours =  Number((hours < 10)? '0' + hours : hours);\r\n    let minutes =  timeDelaySameDay % 60;\r\n    minutes =  Number((minutes < 10)? '0' + minutes : minutes);\r\n\r\n    if( value>250){\r\n        setDelay(Math.round( timeDelaySameDay/1000))\r\n        setArriveSameDay(false)\r\n    }else{\r\n        if(timeDelaySameDay<=100)\r\n        {\r\n            setDelay({\r\n                hours: 1,\r\n                minutes: 0\r\n            })\r\n            setArriveSameDay(true)\r\n        }else{\r\n            setDelay({\r\n                hours: hours,\r\n                minutes: minutes\r\n            })\r\n            setArriveSameDay(true)\r\n        }\r\n    }\r\n   \r\n   \r\n   \r\n  \r\n      \r\n      setPricePerKm(priceKm)\r\n      setToll(tollSolve)\r\n      setTotal(Ctotal)\r\n      \r\n   setStatus('success')\r\n \r\n   \r\n    \r\n\r\n    }\r\n    \r\n  const getDistance = () => {\r\n    const url = `/distance.json/${props.zip1}/${props.zip2}/km`;\r\n    getData(url).then(async(response) => {\r\n      if (response) {\r\n        setDistance(Math.round(response.distance) );\r\n       priceKmFun(Math.round(response.distance) )\r\n        \r\n       \r\n        \r\n       \r\n        console.log(JSON.stringify(response));\r\n      } else {\r\n        setStatus(\"error\");\r\n        console.log('error')\r\n      }\r\n    });\r\n    const urlzip = `/info.json/${props.zip1}/degrees`\r\n    const urlzip2 = `/info.json/${props.zip2}/degrees`\r\n    getData(urlzip).then((response)=>{\r\n      if(response.city){\r\n        setCity(response.city)\r\n        setState(response.state)\r\n      }else{\r\n        setCity('No info')\r\n        setState('No info')\r\n      }\r\n    })\r\n    getData(urlzip2).then((response)=>{\r\n      if(response.city){\r\n        setCity2(response.city)\r\n        setState2(response.state)\r\n      }else{\r\n        setCity2('No info')\r\n        setState2('No info')\r\n      }\r\n    })\r\n  };\r\n  const appendTime = (date)=>{\r\n    date.setMinutes(date.getMinutes()+delay.minutes)\r\n    date.setHours(date.getHours()+delay.hours-5)\r\n    return date\r\n  }\r\nconst appendDays= (date, days)=>{\r\n  date.setDate(date.getDate()+days)\r\n  return date\r\n}\r\nconst makeOrderFn = () =>{\r\n  const url = '/ordenarpedido'\r\n  let data = {\r\n    usuario: localStorage.getItem('id'),\r\n    costo: pricePerKm,\r\n    estado: 'pendiente',\r\n    ciudadsalida: city,\r\n    ciudadllegada: city2,\r\n    estadosalida: state,\r\n    estadollegada: state2\r\n  }\r\n  if(arriveSameDay){\r\n    const date = new Date()\r\n    data.fechaArribo=appendTime(date)\r\n    console.log(JSON.stringify(date) )\r\n  }else{\r\n    \r\n    const date = new Date()\r\n    \r\n    data.fechaArribo=appendDays(date, delay)\r\n  }\r\n  sendData(JSON.stringify(data) , url).then((response)=>{\r\n    console.log(response)\r\n    if(response){\r\n      setOpenN('Creado exitosamente')\r\n      setTimeout(() => {\r\n        setOpenN(false)\r\n      }, 2000);\r\n    }else{\r\n      setOpenN('error servidor')\r\n      setTimeout(() => {\r\n        setOpenN(false)\r\n      }, 2000);\r\n    }\r\n  })\r\n  console.log(data)\r\n}\r\n  const StatusMessage = () => {\r\n    if (status === \"success\" ) {\r\n      return (\r\n          <div>\r\n           \r\n        <Typography variant=\"h5\" gutterBottom>\r\n          {`La distancia que recorrerá tu pedido es de ${distance} kms`}\r\n        </Typography>\r\n        {toll?<Typography>\r\n            {`Costo ${toll/0.25} peaje${toll>0.25?'s':''}: $${toll}`}\r\n        </Typography>:null}\r\n        \r\n        <Typography>\r\n            {`Costo por ${distance} Kilometro${distance>1?'s':''}: $${pricePerKm}`}\r\n        </Typography>\r\n        <Typography>\r\n            {`Costo Total: $${ total}`}\r\n        </Typography>\r\n        <Typography>\r\n            {`Tu pedido llegará en: `}{arriveSameDay?`${delay.hours} hora${delay.hours>1?'s':''} ${delay.minutes>0?`y ${delay.minutes} minuto${delay.minutes>1?'s':''}`:''}`:`${delay} dia${delay>1?'s':''}`}\r\n        </Typography>\r\n        <Typography variant=\"subtitle1\"> \r\n              {`Pedido desde ${city} en el estado de ${state}`}\r\n            </Typography>\r\n            <Typography variant=\"subtitle1\"> \r\n              {`Destino del pedido ${city2} en el estado de ${state2}`}\r\n            </Typography>\r\n        <Button variant=\"contained\" color=\"primary\" onClick={makeOrderFn}>\r\n          Realizar Pedido\r\n        </Button>\r\n        </div>\r\n      );\r\n    } else if (status === \"error\") {\r\n      return (<Typography>Los códigos postales no son correctos</Typography>);\r\n    }else{\r\n        return null\r\n    }\r\n  };\r\n  return (\r\n    <div style={{marginBlock:5}}>\r\n      <Button   variant=\"contained\" color=\"primary\" onClick={()=>getDistance()}>Consultar Pedido</Button>\r\n   \r\n      <StatusMessage />\r\n      <Notification status={openN}/>\r\n    </div>\r\n  );\r\n}\r\n","C:\\Users\\Administrator\\Documents\\projectLeafletV1\\pleafletv1\\src\\components\\login\\login.js",["66","67","68","69"],"C:\\Users\\Administrator\\Documents\\projectLeafletV1\\pleafletv1\\src\\components\\login\\styleLogin.js",[],"C:\\Users\\Administrator\\Documents\\projectLeafletV1\\pleafletv1\\src\\until\\sendData.js",[],"C:\\Users\\Administrator\\Documents\\projectLeafletV1\\pleafletv1\\src\\components\\notification\\notification.js",["70","71","72","73"],"C:\\Users\\Administrator\\Documents\\projectLeafletV1\\pleafletv1\\src\\components\\list\\list.js",[],"C:\\Users\\Administrator\\Documents\\projectLeafletV1\\pleafletv1\\src\\until\\getData.js",[],{"ruleId":"74","replacedBy":"75"},{"ruleId":"76","replacedBy":"77"},{"ruleId":"78","severity":1,"message":"79","line":36,"column":10,"nodeType":"80","messageId":"81","endLine":36,"endColumn":14},{"ruleId":"78","severity":1,"message":"82","line":36,"column":16,"nodeType":"80","messageId":"81","endLine":36,"endColumn":23},{"ruleId":"78","severity":1,"message":"83","line":46,"column":6,"nodeType":"80","messageId":"81","endLine":46,"endColumn":14},{"ruleId":"78","severity":1,"message":"84","line":12,"column":8,"nodeType":"80","messageId":"81","endLine":12,"endColumn":26},{"ruleId":"78","severity":1,"message":"85","line":26,"column":6,"nodeType":"80","messageId":"81","endLine":26,"endColumn":13},{"ruleId":"78","severity":1,"message":"86","line":26,"column":15,"nodeType":"80","messageId":"81","endLine":26,"endColumn":25},{"ruleId":"78","severity":1,"message":"87","line":29,"column":9,"nodeType":"80","messageId":"81","endLine":29,"endColumn":16},{"ruleId":"78","severity":1,"message":"88","line":18,"column":7,"nodeType":"80","messageId":"81","endLine":18,"endColumn":14},{"ruleId":"78","severity":1,"message":"89","line":30,"column":10,"nodeType":"80","messageId":"81","endLine":30,"endColumn":15},{"ruleId":"78","severity":1,"message":"90","line":51,"column":9,"nodeType":"80","messageId":"81","endLine":51,"endColumn":19},{"ruleId":"78","severity":1,"message":"91","line":151,"column":9,"nodeType":"80","messageId":"81","endLine":151,"endColumn":26},{"ruleId":"78","severity":1,"message":"92","line":2,"column":8,"nodeType":"80","messageId":"81","endLine":2,"endColumn":14},{"ruleId":"78","severity":1,"message":"93","line":8,"column":10,"nodeType":"80","messageId":"81","endLine":8,"endColumn":25},{"ruleId":"78","severity":1,"message":"94","line":14,"column":10,"nodeType":"80","messageId":"81","endLine":14,"endColumn":24},{"ruleId":"78","severity":1,"message":"95","line":24,"column":9,"nodeType":"80","messageId":"81","endLine":24,"endColumn":20},"no-native-reassign",["96"],"no-negated-in-lhs",["97"],"no-unused-vars","'open' is assigned a value but never used.","Identifier","unusedVar","'setOpen' is assigned a value but never used.","'response' is assigned a value but never used.","'MonetizationOnIcon' is defined but never used.","'counter' is assigned a value but never used.","'setCounter' is assigned a value but never used.","'classes' is assigned a value but never used.","'options' is assigned a value but never used.","'Alert' is defined but never used.","'fullScreen' is assigned a value but never used.","'handleChangeOpenN' is assigned a value but never used.","'Button' is defined but never used.","'SlideTransition' is defined but never used.","'GrowTransition' is defined but never used.","'handleClick' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]